     1: #include "delay.h"
     2: 
     3: #ifdef USE_ADCONVERTER
     4: #include "adc.h"
     5: 
     6: // -------------------------------------------------------------------------
     7: void
     8: adc_init(void) {
     9:   /* Enable ADC, port config DDDDADAA, Fosc/32 clock */
    10:   ADCON0bits.ADCS = 0b10;
    11:   /*ADCON1bits.*/ ADCS2 = 0;
    12: 
    13:   ADCON0bits.CHS = 0;
    14:   ADCON1bits.PCFG = 0b1110;
    15:   TRISA |= 0b1011;
    16: 
    17:   ADIE = 0;
    18:   ADFM = 1; // right justified
    19: }
    20: 
    21: // -------------------------------------------------------------------------
    22: uint16_t
    23: adc_read(uint8_t ch) {
    24: 
    25:   uint8_t i;
    26:   ADCON0bits.CHS = ch & 0b111;
    27: 
    28:   ADON = 1;
    29: 
    30:   for(i = 0; i < 100; i++) {
    31:   }
    32:   //  _delay(100);
    33: 
    34:   if(ADIE)
    35:     ADIF = 0;
    36: 
    37:   GO_DONE = 1;
    38: 
    39:   if(!ADIE) {
    40:     uint16_t result;
    41: 
    42:     while(GO_DONE)
    43:       ;
    44: 
    45:     result = ADRES;
    46: 
    47:     ADON = 0;
    48: 
    49:     return result;
    50:   }
    51:   return 0;
    52: }
    53: 
    54: // -------------------------------------------------------------------------
    55: // uint8_t
    56: // adc_isr(void) {
    57: //  if(/*PIR1bits.*/ADIF) {
    58: //    /*PIR1bits.*/ADIF = 0;
    59: //    if(ADRES < 45u) {
    60: //      /* Threshold reached */
    61: //      return 1;
    62: //    }
    63: //    adc_start();
    64: //  }
    65: //  return 0;
    66: //}
    67: 
    68: // -------------------------------------------------------------------------
    69: void
    70: adc_disable(void) {
    71:   /*ADCON0bits.*/ ADON = 0;
    72:   /*PIE1bits.*/ ADIE = 0;
    73: }
    74: 
    75: #endif // USE_ADCONVERTER
